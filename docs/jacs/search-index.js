var searchIndex = new Map(JSON.parse('[\
["jacs",{"doc":"","t":"CCCCSFSFSINCNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMMMMMKFNNNNMMNNNMMNNMONMMMMNNNNNMMOMONKMMMMMMMMMMMMMHHHSSSSKCMCCCCMMHHHHHHHHHHHHFNNNNNNNNNNCNNNCNNNNNKMMJJFFKNNNNNNMMMNNNNNNNNNNNNNN","n":["agent","config","crypt","schema","AGENT_SIGNATURE_FIELDNAME","Agent","DOCUMENT_AGENT_SIGNATURE_FIELDNAME","PrivateKey","SHA256_FIELDNAME","SecretPrivateKey","as_string","boilerplate","borrow","borrow","borrow_mut","borrow_mut","build_filepath","build_key_filepath","clone","clone_into","copy_document","create_agent_and_load","create_document_and_load","document","fmt","fmt","from","from","fs_agent_load","fs_agent_new","fs_agent_save","fs_docs_load_all","fs_docs_save_all","fs_document_load","fs_document_new","fs_document_save","fs_load_keys","fs_preload_keys","fs_save_keys","generate_keys","get_agent_for_doc","get_default_dir","get_document","get_document_keys","get_id","get_lookup_id","get_private_key","get_public_key","get_schema_keys","get_version","hash_doc","into","into","load","load_by_id","load_custom_schemas","load_document","loaders","new","ready","remove_document","save","save_document","set_keys","sign_string","signing_procedure","storeJACSDocument","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_document","update_self","use_secret","validate_agent","validate_document_with_custom_schema","validate_header","verify_document_signature","verify_hash","verify_self_hash","verify_self_signature","verify_string","vzip","vzip","zeroize","BoilerPlate","as_string","get_id","get_lookup_id","get_public_key","get_version","Document","JACSDocument","borrow","borrow_mut","clone","clone_into","copy_document","create_document_and_load","fmt","fmt","from","get_document","get_document_keys","getkey","getvalue","hash_doc","id","into","load_document","remove_document","save_document","storeJACSDocument","to_owned","to_string","try_from","try_into","type_id","update_document","validate_document_with_custom_schema","value","verify_document_signature","version","vzip","FileLoader","build_filepath","build_key_filepath","fs_agent_load","fs_agent_new","fs_agent_save","fs_docs_load_all","fs_docs_save_all","fs_document_load","fs_document_new","fs_document_save","fs_load_keys","fs_preload_keys","fs_save_keys","use_filesystem","get_default_dir","set_env_vars","JACS_AGENT_KEY_ALGORITHM","JACS_AGENT_PRIVATE_KEY_FILENAME","JACS_AGENT_PUBLIC_KEY_FILENAME","JACS_KEY_DIRECTORY","KeyManager","aes_encrypt","generate_keys","hash","pq","ringwrapper","rsawrapper","sign_string","verify_string","decrypt_private_key","encrypt_private_key","hash_string","generate_keys","sign_string","verify_string","generate_keys","sign_string","verify_string","generate_keys","sign_string","verify_string","Schema","borrow","borrow_mut","create","fmt","from","get_array_of_values","get_header_schema_url","hash_string","into","new","signature","try_from","try_into","type_id","utils","validate_agent","validate_config","validate_header","validate_signature","vzip","SignatureVerifiers","get_array_of_values","hash_string","CONFIG_SCHEMA_STRING","DEFAULT_SCHEMA_STRINGS","EmbeddedSchemaResolver","LocalSchemaResolver","ValueExt","borrow","borrow","borrow_mut","borrow_mut","from","from","get_bool","get_i64","get_str","into","into","new","new","resolve","resolve","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"jacs"],[4,"jacs::agent"],[89,"jacs::agent::boilerplate"],[95,"jacs::agent::document"],[128,"jacs::agent::loaders"],[143,"jacs::config"],[145,"jacs::crypt"],[158,"jacs::crypt::aes_encrypt"],[160,"jacs::crypt::hash"],[161,"jacs::crypt::pq"],[164,"jacs::crypt::ringwrapper"],[167,"jacs::crypt::rsawrapper"],[170,"jacs::schema"],[191,"jacs::schema::signature"],[194,"jacs::schema::utils"],[222,"alloc::string"],[223,"core::error"],[224,"alloc::boxed"],[225,"core::result"],[226,"std::path"],[227,"core::option"],[228,"serde_json::value"],[229,"core::fmt"],[230,"core::fmt"],[231,"secrecy"],[232,"core::any"],[233,"url"],[234,"alloc::sync"],[235,"jsonschema::resolver"]],"d":["","","","","","","","","","Use this alias when storing secret values","","","","","","","","","","","copys document without modifications","create an agent, and provde id and version as a result","create an document, and provde id and version as a result","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","on instantiation load and validata all local documents","","","","","","a way to load keys that aren’t default","","this necessatates updateding the version of the agent","","","","","","combination of id and value","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Generates a signature JSON fragment for the specified JSON …","","","","","","","","","","pass in modified doc","pass in modified agent’s JSON the function will replace …","A method that operates on the private key. This method is …","","","","","verify the hash of a complete document that has …","verify the hash where the document is the agent itself.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The goal of fileloader is to prevent fileloading into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","returns public, public_filepath, private, private_filepath","","","","","","load a document that has data but no id or version an id …","","Returns the argument unchanged.","utilty function to retrieve the list of fields this is …","","","Calls <code>U::from(self)</code>.","","","","","","","","","basic check this conforms to a schema validate header does …","basic check this conforms to a schema validate header does …","","abstract traits that must be implemented by importing …","","","","","Custom Resolver that resolves schemas from memory","Custom Resolver that resolves schemas from the local …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,0,7,1,7,1,1,1,7,7,1,1,1,0,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,7,1,7,1,7,1,7,1,1,1,7,1,1,1,1,1,1,1,1,7,1,7,0,21,21,21,21,21,0,0,9,9,9,9,22,22,9,9,9,22,22,9,9,22,9,9,22,22,22,22,9,9,9,9,9,22,22,9,22,9,9,0,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,24,0,0,0,0,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,0,25,25,25,0,25,25,25,25,25,0,26,26,0,0,0,0,0,29,30,29,30,29,30,27,27,27,29,30,29,30,29,30,29,30,29,30,29,30,29,30],"f":[0,0,0,0,0,0,0,0,0,0,[1,[[5,[2,[4,[3]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2,2],[[5,[6,[4,[3]]]]]],[[1,2,2],[[5,[6,[4,[3]]]]]],[7,7],[[-1,-2],8,[],[]],[[1,2],[[5,[9,[4,[3]]]]]],[[1,2,10,[11,[2]]],[[5,[12,[4,[3]]]]]],[[1,2],[[5,[9,[4,[3]]]]]],0,[[1,13],14],[[1,13],14],[-1,-1,[]],[-1,-1,[]],[[1,2],[[5,[2,[4,[3]]]]]],[[1,2],[[5,[2,[4,[3]]]]]],[[1,2,2],[[5,[2,[4,[3]]]]]],[1,[[5,[[15,[2]],[4,[3]]]]]],[1,[[5,[[15,[2]],[4,[3]]]]]],[[1,2],[[5,[2,[4,[3]]]]]],[[1,2],[[5,[2,[4,[3]]]]]],[[1,2,2,[11,[2]]],[[5,[2,[4,[3]]]]]],[1,[[5,[8,[4,[3]]]]]],[[1,2,2],[[5,[8,[4,[3]]]]]],[1,[[5,[8,[4,[3]]]]]],[1,[[5,[8,[4,[3]]]]]],[[1,2,[11,[2]]],[[5,[2,[4,[3]]]]]],[1,6],[[1,2],[[5,[9,[4,[3]]]]]],[1,[[15,[2]]]],[1,[[5,[2,[4,[3]]]]]],[1,[[5,[2,[4,[3]]]]]],[1,[[5,[[16,[7]],[4,[3]]]]]],[1,[[5,[[15,[17]],[4,[3]]]]]],[1,[[15,[2]]]],[1,[[5,[2,[4,[3]]]]]],[[1,12],[[5,[2,[4,[3]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],[[5,[8,[4,[3]]]]]],[[1,[11,[2]],[11,[2]]],[[5,[8,[4,[3]]]]]],[[1,[18,[2]]],8],[[1,2],[[5,[9,[4,[3]]]]]],0,[[2,2,2],[[5,[1,[4,[3]]]]]],[1,10],[[1,2],[[5,[9,[4,[3]]]]]],[1,[[5,[2,[4,[3]]]]]],[[1,2,[11,[2]]],[[5,[8,[4,[3]]]]]],[[1,[15,[17]],[15,[17]],2],[[5,[8,[4,[3]]]]]],[[1,2],[[5,[2,[4,[3]]]]]],[[1,12,[11,[[15,[2]]]],2],[[5,[12,[4,[3]]]]]],[[1,12],[[5,[9,[4,[3]]]]]],[-1,-2,[],[]],[-1,2,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[[1,2,2],[[5,[9,[4,[3]]]]]],[[1,2],[[5,[2,[4,[3]]]]]],[7,[[15,[17]]]],[[1,20],[[5,[12,[4,[3]]]]]],[[1,20,12],[[5,[8,2]]]],[[1,20],[[5,[12,[4,[3]]]]]],[[1,2,[11,[2]],[11,[[15,[2]]]],[11,[[15,[17]]]],[11,[2]]],[[5,[8,[4,[3]]]]]],[[1,12],[[5,[10,[4,[3]]]]]],[1,[[5,[10,[4,[3]]]]]],[1,[[5,[8,[4,[3]]]]]],[[1,2,2,[15,[17]],[11,[2]]],[[5,[8,[4,[3]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[7,8],0,[21,[[5,[2,[4,[3]]]]]],[21,[[5,[2,[4,[3]]]]]],[21,[[5,[2,[4,[3]]]]]],[21,[[5,[[15,[17]],[4,[3]]]]]],[21,[[5,[2,[4,[3]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[[-1,-2],8,[],[]],[[22,2],[[5,[9,[4,[3]]]]]],[[22,2],[[5,[9,[4,[3]]]]]],[[9,13],14],[[9,13],14],[-1,-1,[]],[[22,2],[[5,[9,[4,[3]]]]]],[22,[[15,[2]]]],[9,2],[9,12],[[22,12],[[5,[2,[4,[3]]]]]],0,[-1,-2,[],[]],[[22,2],[[5,[9,[4,[3]]]]]],[[22,2],[[5,[9,[4,[3]]]]]],[[22,2,[11,[2]]],[[5,[8,[4,[3]]]]]],[[22,12],[[5,[9,[4,[3]]]]]],[-1,-2,[],[]],[-1,2,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,19,[]],[[22,2,2],[[5,[9,[4,[3]]]]]],[[22,20,12],[[5,[8,2]]]],0,[[22,2,[11,[2]],[11,[[15,[2]]]],[11,[[15,[17]]]],[11,[2]]],[[5,[8,[4,[3]]]]]],0,[-1,-2,[],[]],0,[[23,2,2],[[5,[6,[4,[3]]]]]],[[23,2,2],[[5,[6,[4,[3]]]]]],[[23,2],[[5,[2,[4,[3]]]]]],[[23,2],[[5,[2,[4,[3]]]]]],[[23,2,2],[[5,[2,[4,[3]]]]]],[23,[[5,[[15,[2]],[4,[3]]]]]],[23,[[5,[[15,[2]],[4,[3]]]]]],[[23,2],[[5,[2,[4,[3]]]]]],[[23,2],[[5,[2,[4,[3]]]]]],[[23,2,2,[11,[2]]],[[5,[2,[4,[3]]]]]],[23,[[5,[8,[4,[3]]]]]],[[23,2,2],[[5,[8,[4,[3]]]]]],[23,[[5,[8,[4,[3]]]]]],[[],10],[[],6],[[],8],0,0,0,0,0,0,[24,[[5,[8,[4,[3]]]]]],0,0,0,0,[[24,2],[[5,[2,[4,[3]]]]]],[[24,2,2,[15,[17]],[11,[2]]],[[5,[8,[4,[3]]]]]],[[[18,[17]]],[[5,[[15,[17]],[4,[3]]]]]],[[[18,[17]]],[[5,[[15,[17]],[4,[3]]]]]],[2,2],[[],[[5,[[8,[[15,[17]],[15,[17]]]],[4,[3]]]]]],[[[15,[17]],2],[[5,[2,[4,[3]]]]]],[[[15,[17]],2,2],[[5,[8,[4,[3]]]]]],[[],[[5,[[8,[[15,[17]],[15,[17]]]],[4,[3]]]]]],[[[15,[17]],2],[[5,[2,[4,[3]]]]]],[[[15,[17]],2,2],[[5,[8,[4,[3]]]]]],[[],[[5,[[8,[[15,[17]],[15,[17]]]],[4,[3]]]]]],[[[15,[17]],20],[[5,[2,[4,[3]]]]]],[[[15,[17]],2,2],[[5,[8,[4,[3]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[25,20],[[5,[12,[4,[3]]]]]],[[25,13],14],[-1,-1,[]],[[25,12,2],2],[25,2],[[25,2],2],[-1,-2,[],[]],[[2,2,2],[[5,[25,[4,[3]]]]]],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,19,[]],0,[[25,20],[[5,[12,[4,[3]]]]]],[[25,20],[[5,[12,[4,[3]]]]]],[[25,20],[[5,[12,[4,[3]]]]]],[[25,12],[[5,[8,[4,[3]]]]]],[-1,-2,[],[]],0,[[26,12,2],2],[[26,2],2],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[[27,20],[[11,[10]]]],[[27,20],[[11,[28]]]],[[27,20],[[11,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[6,29],[[],30],[[29,12,31,20],[[5,[[32,[12]],33]]]],[[30,12,31,20],[[5,[[32,[12]],33]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Agent",4],[5,"String",222],[10,"Error",223],[5,"Box",224],[6,"Result",225],[5,"PathBuf",226],[5,"PrivateKey",4],[1,"tuple"],[5,"JACSDocument",95],[1,"bool"],[6,"Option",227],[6,"Value",228],[5,"Formatter",229],[8,"Result",229],[5,"Vec",230],[5,"Secret",231],[1,"u8"],[1,"slice"],[5,"TypeId",232],[1,"str"],[10,"BoilerPlate",89],[10,"Document",95],[10,"FileLoader",128],[10,"KeyManager",145],[5,"Schema",170],[10,"SignatureVerifiers",191],[10,"ValueExt",194],[1,"i64"],[5,"LocalSchemaResolver",194],[5,"EmbeddedSchemaResolver",194],[5,"Url",233],[5,"Arc",234],[8,"SchemaResolverError",235]],"b":[[24,"impl-Display-for-Agent"],[25,"impl-Debug-for-Agent"],[103,"impl-Debug-for-JACSDocument"],[104,"impl-Display-for-JACSDocument"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
